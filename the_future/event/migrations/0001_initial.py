# -*- coding: utf-8 -*-
# Generated by Django 1.9.8 on 2016-10-10 19:11
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import utils.model_functions


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('armour', '0003_auto_20161008_1150'),
        ('item', '0002_auto_20161008_1150'),
        ('account', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Event',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_active', models.BooleanField(default=True)),
                ('title', models.CharField(blank=True, max_length=255)),
                ('description', models.TextField()),
                ('arm_armour_awarded', models.ManyToManyField(blank=True, to='armour.ArmArmour')),
                ('backpack_awarded', models.ManyToManyField(blank=True, to='armour.BackPack')),
                ('battle_item_awarded', models.ManyToManyField(blank=True, to='item.BattleItem')),
                ('body_armour_awarded', models.ManyToManyField(blank=True, to='armour.BodyArmour')),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='account.Account')),
                ('head_armour_awarded', models.ManyToManyField(blank=True, to='armour.HeadArmour')),
                ('leg_armour_awarded', models.ManyToManyField(blank=True, to='armour.LegArmour')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='account.Account')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model, utils.model_functions.DetailURLMixin),
        ),
        migrations.CreateModel(
            name='PlayerEventDirectory',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_active', models.BooleanField(default=True)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='account.Account')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='account.Account')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model, utils.model_functions.DetailURLMixin),
        ),
        migrations.CreateModel(
            name='PlayerEventTitle',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_active', models.BooleanField(default=True)),
                ('title', models.CharField(max_length=255)),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='account.Account')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='account.Account')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model, utils.model_functions.DetailURLMixin),
        ),
        migrations.CreateModel(
            name='PlayerEventValue',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created', models.DateTimeField(default=django.utils.timezone.now)),
                ('modified', models.DateTimeField(default=django.utils.timezone.now)),
                ('is_active', models.BooleanField(default=True)),
                ('value', models.IntegerField()),
                ('created_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='account.Account')),
                ('modified_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='account.Account')),
            ],
            options={
                'abstract': False,
            },
            bases=(models.Model, utils.model_functions.DetailURLMixin),
        ),
        migrations.AddField(
            model_name='playereventdirectory',
            name='title',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='event.PlayerEventTitle'),
        ),
        migrations.AddField(
            model_name='playereventdirectory',
            name='value',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='event.PlayerEventValue'),
        ),
        migrations.AddField(
            model_name='event',
            name='player_event_awarded',
            field=models.ManyToManyField(blank=True, to='event.PlayerEventDirectory'),
        ),
        migrations.AddField(
            model_name='event',
            name='player_event_directory',
            field=models.ManyToManyField(blank=True, related_name='player_event_directory', to='event.PlayerEventDirectory'),
        ),
        migrations.AddField(
            model_name='event',
            name='player_event_needed',
            field=models.ManyToManyField(blank=True, related_name='player_event_needed', to='event.PlayerEventDirectory'),
        ),
        migrations.AddField(
            model_name='event',
            name='shield_item_awarded',
            field=models.ManyToManyField(blank=True, to='item.ShieldItem'),
        ),
    ]
